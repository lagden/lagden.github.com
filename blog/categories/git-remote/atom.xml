<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: git remote | Usefull Stuff]]></title>
  <link href="http://lagden.github.com/blog/categories/git-remote/atom.xml" rel="self"/>
  <link href="http://lagden.github.com/"/>
  <updated>2012-03-07T16:06:00-03:00</updated>
  <id>http://lagden.github.com/</id>
  <author>
    <name><![CDATA[Thiago Lagden]]></name>
    <email><![CDATA[lagden@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Repositório remoto]]></title>
    <link href="http://lagden.github.com/blog/2011/10/01/repositorio-remoto/"/>
    <updated>2011-10-01T16:36:00-03:00</updated>
    <id>http://lagden.github.com/blog/2011/10/01/repositorio-remoto</id>
    <content type="html"><![CDATA[<blockquote><p>Trabalhar com um repositório remoto é uma ótima maneira de colaborar o seu código com outros desenvolvedores, trabalhar em várias máquinas e fazer backup de seu código fonte.<br/>
Um repositório remoto é simplesmente outro repositório, normalmente em outro servidor, que você pode empurrar (<code>git push</code>) os seus commits e puxar (<code>git pull</code>) commits dos outros.</p></blockquote>

<h3>Adicionando um servidor remoto</h3>

<hr />

<p>Utilizaremos o projeto "Hello Word" criado no artigo <a href="/blog/2011/10/01/git-para-iniciantes/">Git para iniciantes</a>.</p>

<blockquote><p><strong>Atenção:</strong> Crie um repositório no seu servidor remoto com o commando <code>git init --bare</code></p></blockquote>

<pre><code>ssh user@server.com
user@server.com's password: 
Last login: Fri Sep 30 19:07:03 2011 from 177.32.53.79
user@server.com [~]# mkdir -p git/hello.git
user@server.com [~]# cd git/hello.git
user@server.com [~]# git init --bare
</code></pre>

<p>Na sua máquina, adicione repositório remoto:</p>

<pre><code>cd ~/my_app
git remote add origin ssh://user@server.com/~/git/hello.git
</code></pre>

<blockquote><p>Você pode ter vários controles remotos e dar nomes diferentes para cada, como "palco" ou "projeto".<br/>
Veja todos os seus controles remotos com <code>git remote</code> ou <code>git remote -v</code>.</p></blockquote>

<h3>git push - Empurre seus commits para o repositório remoto</h3>

<pre><code>git push -u origin master
Counting objects: 3, done. 
Writing objects: 100% (3/3), 242 bytes, done. 
Total 3 (delta 0), reused 0 (delta 0) 
Unpacking objects: 100% (3/3), done.
To ssh://user@server.com/~/git/hello.git
 * [new branch]      master -&gt; master
</code></pre>

<h3>git pull - Puxe as alterações do repositório de origem</h3>

<p>É uma boa prática puxar (<code>git pull</code>) antes de empurrar (<code>git push</code>), assegurando que você tenha o código mais recente.</p>

<pre><code>git pull origin master
</code></pre>

<p>Isso irá sincronizar seu repositório local com o repositório remoto.</p>

<p>Geralmente o "merge" dos repositórios ocorrem sem problemas, mas às vezes podem acontercer conflitos que deverão ser arrumados manualmente de preferência.<br/>
Está curioso? Veja <a href="http://genomewiki.ucsc.edu/index.php/Resolving_merge_conflicts_in_Git">Resolvendo conflitos</a></p>
]]></content>
  </entry>
  
</feed>
